package stepDefinition;

import java.util.concurrent.TimeUnit;

import org.junit.Assert;
import org.openqa.selenium.By;
import org.openqa.selenium.chrome.ChromeDriver;

import cucumber.api.java.en.Given;
import cucumber.api.java.en.Then;

import pageRepositories.KodoPageRepository_homePage;
import rootClass.Rootclass;
import utility.ActionsClass;

public class KodoStepDefinition extends Rootclass{

	 KodoPageRepository_homePage homePage = new KodoPageRepository_homePage();	
	 ActionsClass actions = new ActionsClass();
	 
	 
	@Given("^I launch the URL$")
	public void I_launch_url() throws Throwable {
		actions.launchUrl();
	}

	 @Then("^Check search bar availablity$")
	 public void check_search_bar_availablity() throws Throwable {
	    actions.isEnbleAndDisplay(homePage.searchTextbox);
	    actions.isEnbleAndDisplay(homePage.searchIcon);
	 }

	 @Then("^Search bar input validations$")
	 public void search_bar_input_validations() throws Throwable {
		 
		 String alpha="Demo";
		 String num="123";
		 String spl="!@#$";
		 String aphanumspl =alpha+num+spl;
		 
		 //Alphabets
	     homePage.typeInSearchTextbox(alpha);
	     Assert.assertEquals(alpha, homePage.searchTextbox.getAttribute("value"));
	     homePage.searchTextbox.clear();
	     
	   //Numeric
	     homePage.typeInSearchTextbox(num);
	     Assert.assertEquals(num, homePage.searchTextbox.getAttribute("value"));
	     homePage.searchTextbox.clear();
	     
	   //special characters
	     homePage.typeInSearchTextbox(spl);
	     Assert.assertEquals(spl, homePage.searchTextbox.getAttribute("value"));
	     homePage.searchTextbox.clear();
	     
	   //alpha numeric & special characters
	     homePage.typeInSearchTextbox(aphanumspl);
	     Assert.assertEquals(aphanumspl, homePage.searchTextbox.getAttribute("value"));
	     homePage.searchTextbox.clear();
	     
	     
	 }

	 @Then("^Search bar functional behaviour$")
	 public void search_bar_functional_behaviour() throws Throwable {
		 
//		 //Enter 2 character and check for suggestion drop down 
//		 homePage.typeInSearchTextbox("pr");
//		 Assert.assertEquals(false, actions.isEnbleAndDisplay(homePage.suggestionDropDown));
//		 homePage.searchTextbox.clear();
//		 
//		 //Enter 3 character and check for suggestion drop down 
//		 homePage.typeInSearchTextbox("pri");
//		 Assert.assertEquals(true, actions.isEnbleAndDisplay(homePage.suggestionDropDown));
//		 homePage.searchTextbox.clear();
//		 
//		 //Click on the search Icon without entering any text 
//		homePage.clickSearchIcon();
//		Assert.assertEquals("Please enter a search keyword", homePage.warningMsgTexteleGetText().trim());
		
		//Enter some product name which is not there in the website and search
		String invalidtext = "xxxxyyyy";
		homePage.typeInSearchTextbox(invalidtext);
		String exp="No results were found for your search \""+invalidtext+"";
		String act=homePage.warningMsgTexteleGetText().trim();
		
		
		Assert.assertEquals("No results were found for your search \""+invalidtext+"", homePage.warningMsgTexteleGetText().trim());
		
		//Enter some valid product name 
		String validtext = "Printed Summer Dress";
		homePage.typeInSearchTextbox(validtext);
		System.out.println(homePage.suggestionList.get(0).getText());


		 
	    
	 }

}
